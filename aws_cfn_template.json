{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Mesos Cluster on CoreOS",
    "Mappings": {
        "RegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-c1421fc0"
            },
            "sa-east-1": {
                "AMI": "ami-dfbe17c2"
            },
            "ap-southeast-2": {
                "AMI": "ami-1d2c4a27"
            },
            "ap-southeast-1": {
                "AMI": "ami-4c5a021e"
            },
            "us-east-1": {
                "AMI": "ami-d4c60ebc"
            },
            "us-west-2": {
                "AMI": "ami-4d9ee67d"
            },
            "us-west-1": {
                "AMI": "ami-e19c9fa4"
            },
            "eu-west-1": {
                "AMI": "ami-cb4293bc"
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "EC2 PV instance type (m3.medium, etc). Note: m1.small is not supported.",
            "Type": "String",
            "Default": "m3.medium",
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c1.medium",
                "c1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "t1.micro"
            ],
            "ConstraintDescription": "Must be a valid EC2 PV instance type. Note: m1.small is not supported."
        },
        "ClusterSize": {
            "Default": "3",
            "MinValue": "3",
            "MaxValue": "12",
            "Description": "Number of nodes in cluster (3-12).",
            "Type": "Number"
        },
        "DiscoveryURL": {
            "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new",
            "Type": "String"
        },
        "AdvertisedIPAddress": {
            "Description": "Use 'private' if your etcd cluster is within one region or 'public' if it spans regions or cloud providers.",
            "Default": "private",
            "AllowedValues": [
                "private",
                "public"
            ],
            "Type": "String"
        },
        "AllowSSHFrom": {
            "Description": "The net block (CIDR) that SSH is available to.",
            "Default": "0.0.0.0/0",
            "Type": "String"
        },
        "KeyPair": {
            "Description": "The name of an EC2 Key Pair to allow SSH access to the instance.",
            "Type": "String"
        }
    },
    "Resources": {
        "Ingress4001": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "CoreOSMesosSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "4001",
                "ToPort": "4001",
                "SourceSecurityGroupId": {
                    "Fn::GetAtt": [
                        "CoreOSMesosSecurityGroup",
                        "GroupId"
                    ]
                }
            }
        },
        "Ingress7001": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "CoreOSMesosSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "7001",
                "ToPort": "7001",
                "SourceSecurityGroupId": {
                    "Fn::GetAtt": [
                        "CoreOSMesosSecurityGroup",
                        "GroupId"
                    ]
                }
            }
        },
        "CoreOSMesosSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "CoreOS SecurityGroup",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5050",
                        "ToPort": "5050",
                        "CidrIp": "0.0.0.0/0"

                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5051",
                        "ToPort": "5051",
                        "CidrIp": "0.0.0.0/0"

                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "2181",
                        "ToPort": "2181",
                        "CidrIp": "0.0.0.0/0"

                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5050",
                        "ToPort": "5050",
                        "CidrIp": "0.0.0.0/0"

                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"

                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"

                    }
                ]
            }
        },
        "CoreOSMesosAutoScale": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": {
                    "Fn::GetAZs": ""
                },
                "LaunchConfigurationName": {
                    "Ref": "CoreOSMesosLaunchConfig"
                },
                "MinSize": "3",
                "MaxSize": "12",
                "DesiredCapacity": {
                    "Ref": "ClusterSize"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            }
        },
        "CoreOSMesosLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroups": [
                    {
                        "Ref": "CoreOSMesosSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config\n\n",
                                "coreos:\n",
                                "  etcd:\n",
                                "    discovery: ",
                                {
                                    "Ref": "DiscoveryURL"
                                },
                                "\n",
                                "    addr: $",
                                {
                                    "Ref": "AdvertisedIPAddress"
                                },
                                "_ipv4:4001\n",
                                "    peer-addr: $",
                                {
                                    "Ref": "AdvertisedIPAddress"
                                },
                                "_ipv4:7001\n",
                                "  units:\n",
                                "    - name: etcd.service\n",
                                "      command: start\n",
                                "    - name: fleet.service\n",
                                "      command: start\n",
                                "      runtime: false\n",
                                "      content: |\n",
                                "        [Unit]\n",
                                "        Description=fleet\n",
                                "        [Service]\n",
                                "        Environment=FLEET_PUBLIC_IP=$public_ipv4\n",
                                "        ExecStart=/usr/bin/fleet\n",
                                "    - name: mesos_bootstrap.service\n",
                                "      command: start\n",
                                "      runtime: true\n",
                                "      content: |\n",
                                "        [Unit]\n",
                                "        Description=Mesos Bootstrapper\n",
                                "        After=docker.service\n",
                                "        After=etcd.service\n",
                                "        After=fleet.service\n",
                                "        [Service]\n",
                                "        TimeoutStartSec=900\n",
                                "        EnvironmentFile=/etc/environment\n",
                                "        ExecStartPre=/bin/sh -c \"/usr/bin/docker history madhatter/mesos-on-coreos:1.0 >/dev/null || /usr/bin/docker pull madhatter/mesos-on-coreos:1.0\"\n",
                                "        ExecStart=/bin/sh -c \"/usr/bin/docker run --rm --name mesos --net=host -p 5050:5050 -p 5051:5051 -p 2181:2181 -e MAIN_IP=$private_ipv4 -e DOCKER0_IP=`ifconfig docker0 | grep 'inet ' | awk '{print $2}'` -v /var/lib/docker/btrfs/subvolumes:/var/lib/docker/btrfs/subvolumes -v /var/run/docker.sock:/var/run/docker.sock madhatter/mesos-on-coreos:1.0\"\n",
                                "        ExecStop=/usr/bin/docker rm -f mesos"
                            ]
                        ]
                    }
                }
            }
        }
    }
}
